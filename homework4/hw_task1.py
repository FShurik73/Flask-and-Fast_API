# Задание №7
# Напишите программу на Python, которая будет находить
# сумму элементов массива из 1000000 целых чисел.
# Пример массива: arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ...]
# Массив должен быть заполнен случайными целыми числами
# от 1 до 100.
# При решении задачи нужно использовать многопоточность,
# многопроцессорность и асинхронность.
# В каждом решении нужно вывести время выполнения вычислений.

import threading
import time

arr = [93, 63, 23, 99, 90, 36, 19, 100, 91, 78, 97, 69, 23, 58, 65, 4, 8, 49, 37, 16, 92, 15, 38, 15, 29, 24, 14, 18,
       75, 93, 72, 64, 6, 63, 78, 90, 45, 46, 90, 43, 44, 89, 66, 19, 59, 61, 22, 3, 64, 41, 14, 8, 85, 57, 81, 79,
       42, 10, 34, 41, 98, 35, 71, 71, 34, 11, 57, 14, 46, 40, 92, 35, 66, 9, 76, 12, 86, 99, 58, 91, 90, 86, 84, 58,
       32, 99, 98, 82, 26, 29, 54, 56, 66, 15, 91, 37, 15, 68, 59, 76, 56, 59, 76, 82, 88, 69, 6, 11, 28, 76, 14, 18,
       84, 98, 43, 45, 31, 19, 83, 14, 99, 22, 77, 23, 85, 58, 49, 82, 67, 71, 9, 54, 6, 67, 85, 92, 83, 36, 28, 79,
       63, 11, 13, 79, 98, 5, 87, 1, 8, 48, 41, 3, 55, 41, 45, 71, 44, 90, 100, 15, 89, 31, 8, 68, 88, 89, 44, 98, 80,
       90, 59, 100, 46, 4, 88, 33, 88, 17, 75, 34, 75, 35, 48, 60, 4, 45, 74, 77, 79, 81, 18, 97, 20, 80, 29, 85, 24,
       35, 46, 72, 100, 54, 15, 96, 26, 49, 52, 86, 64, 8, 60, 42, 38, 32, 83, 29, 1, 89, 89, 13, 59, 60, 77, 23, 24,
       30, 54, 61, 26, 95, 46, 83, 49, 65, 69, 5, 55, 16, 85, 53, 16, 23, 96, 79, 23, 20, 85, 44, 85, 86, 85, 36, 69,
       77, 5, 48, 81, 59, 35, 62, 57, 95, 44, 59, 19, 91, 26, 26, 47, 52, 8, 75, 67, 17, 24, 10, 69, 82, 36, 91, 2, 41,
       99, 72, 92, 31, 31, 36, 56, 40, 67, 61, 34, 12, 46, 7, 65, 53, 86, 54, 33, 2, 5, 9, 76, 81, 51, 12, 58, 34, 13,
       80, 23, 4, 51, 85, 86, 85, 62, 41, 94, 4, 11, 50, 41, 58, 27, 97, 80, 21, 21, 70, 54, 82, 27, 43, 55, 4, 35, 1,
       24, 100, 3, 32, 100, 53, 51, 67, 52, 93, 93, 77, 34, 59, 100, 52, 49, 94, 24, 76, 46, 52, 58, 95, 59, 45, 89,
       85, 6, 63, 24, 88, 90, 93, 46, 23, 14, 77, 58, 84, 69, 48, 86, 96, 91, 86, 100, 97, 95, 22, 51, 3, 41, 99, 42,
       66, 81, 52, 24, 63, 34, 75, 1, 55, 19, 28, 7, 88, 54, 21, 92, 97, 94, 76, 47, 41, 33, 47, 70, 37, 6, 1, 44, 98,
       73, 40, 19, 43, 84, 34, 37, 44, 6, 3, 81, 58, 95, 44, 90, 63, 55, 78, 34, 46, 42, 11, 8, 26, 91, 77, 29, 19, 17,
       39, 99, 76, 76, 24, 40, 18, 1, 35, 68, 43, 52, 13, 25, 47, 11, 86, 71, 14, 90, 91, 55, 91, 60, 34, 73, 6, 20, 73,
       79, 98, 57, 71, 6, 16, 70, 41, 14, 46, 25, 52, 95, 95, 21, 29, 97, 18, 53, 98, 88, 89, 100, 35, 38, 50, 47, 96, 4,
       19, 69, 2, 66, 11, 82, 16, 94, 38, 61, 8, 9, 76, 28, 20, 32, 78, 90, 56, 23, 36, 32, 42, 40, 11, 28, 2, 33, 21,
       10, 62, 77, 40, 69, 72, 61, 60, 2, 35, 31, 7, 100, 20, 3, 18, 83, 51, 28, 44, 74, 87, 28, 77, 38, 6, 57, 100,
       84, 83, 15, 29, 1, 48, 33, 23, 83, 7, 66, 29, 79, 35, 25, 33, 74, 85, 24, 27, 37, 58, 70, 66, 6, 32, 27, 1,
       40, 21, 45, 94, 73, 20, 42, 72, 41, 91, 18, 35, 50, 47, 8, 91, 68, 33, 45, 80, 6, 45, 95, 95, 80, 49, 52, 89,
       83, 22, 21, 55, 29, 12, 66, 99, 95, 26, 30, 78, 99, 3, 3, 27, 63, 76, 96, 69, 57, 94, 72, 65, 24, 20, 38, 68, 70,
       12, 3, 89, 3, 66, 71, 67, 12, 29, 10, 71, 11, 32, 38, 79, 30, 67, 12, 71, 6, 9, 50, 42, 96, 9, 99, 36, 99, 21,
       43, 25, 51, 98, 43, 43, 75, 8, 93, 80, 9, 82, 21, 84, 53, 11, 61, 85, 26, 82, 93, 83, 27, 76, 24, 66, 43, 16,
       95, 60, 88, 52, 5, 81, 3, 67, 80, 13, 96, 87, 83, 57, 2, 99, 40, 19, 30, 76, 84, 61, 15, 23, 91, 59, 3, 18, 51,
       92, 29, 97, 1, 37, 78, 47, 49, 56, 64, 100, 64, 27, 89, 41, 40, 7, 44, 27, 12, 12, 85, 35, 32, 76, 10, 57, 7,
       47, 89, 20, 80, 86, 22, 22, 6, 50, 26, 1, 87, 51, 22, 54, 38, 67, 77, 44, 20, 94, 71, 91, 57, 21, 28, 68,
       25, 85, 33, 100, 60, 36, 8, 59, 87, 95, 51, 59, 75, 40, 7, 73, 35, 53, 13, 23, 70, 21, 51, 93, 13, 10, 2, 44,
       95, 29, 38, 26, 87, 13, 60, 53, 22, 85, 9, 94, 62, 18, 42, 60, 62, 3, 42, 64, 5, 39, 46, 68, 62, 95, 48, 44,
       75, 53, 19, 94, 39, 23, 86, 4, 10, 13, 61, 83, 8, 56, 24, 92, 95, 52, 64, 40, 18, 2, 34, 58, 13, 51, 24, 80,
       99, 79, 59, 73, 63, 48, 90, 17, 27, 89, 51, 20, 70, 2, 20, 77, 95, 1, 21, 40, 95, 17, 80, 33, 4, 6, 32, 2, 82,
       89, 55, 14, 86, 12, 19, 68, 77, 88, 78, 6, 2, 62, 75, 33, 99, 34, 4, 33, 45, 48, 26, 19, 26, 99, 63, 53, 7, 14,
       94, 42, 89, 97, 57, 20, 12, 85, 64, 49, 25, 59, 18, 83, 4, 48, 15, 24, 13, 91, 68, 63, 62, 22, 34, 25, 21, 23,
       95, 50, 65, 18, 62, 98, 65, 33, 43, 50, 23, 47, 93, 45, 95, 59, 38, 78, 51, 61, 94, 21, 78, 51, 18, 58, 52, 62,
       7, 92, 30, 38, 28, 62, 21, 56]


def sum_array(start_idx, end_idx):
    global summa
    for i in range(start_idx, end_idx):
        summa += arr[i]


def get_summa():
    for i in range(num_threads):
        start_idx = i * len(arr) // num_threads
        end_idx = (i + 1) * len(arr) // num_threads
        thread = threading.Thread(target=sum_array, args=(start_idx, end_idx))
        threads.append(thread)
        thread.start()

    for thread in threads:
        thread.join()
    return summa


if __name__ == '__main__':
    start_time = time.time()
    summa = 0
    num_threads = 4
    threads = []
    get_summa()
    print(summa)
    print(f"Downloaded in {time.time() - start_time:2f} seconds")





